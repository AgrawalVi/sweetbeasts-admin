// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Product {
  id           Int     @id @default(autoincrement())
  name         String
  priceInCents Int
  imagePath    String
  description  String
  inventory    Int     @default(0)
  available    Boolean @default(false)
  numSold      Int     @default(0)

  orders  Order[]
  carts   Cart[]
  reviews Review[]
}

model Customer {
  id                     String   @id @default(cuid())
  firstName              String
  lastName               String
  subscribedToNewsletter Boolean  @default(false)
  email                  String   @unique
  phone                  String?
  createdAt              DateTime @default(now())
  numOrders              Int @default(0)

  cart    Cart?
  orders  Order[]
  reviews Review[]
}

model AdminUser {
  id        String   @id @default(uuid())
  userRole  Int
  active    Boolean  @default(true)
  lastLogin DateTime
}

model Order {
  id               Int      @id @default(autoincrement())
  pricePaidInCents Int[]
  dateCreated      DateTime @default(now())
  dateShipped      DateTime
  trackingNumber   String
  // Need to add address information
  //address String
  status           Int

  customerId String
  customer   Customer  @relation(fields: [customerId], references: [id], onDelete: Restrict)
  products   Product[]
}

model Cart {
  id         String @id @default(uuid())
  customerId String @unique

  customer Customer  @relation(fields: [customerId], references: [id], onDelete: Cascade)
  products Product[]
}

model Review {
  id        Int    @id @default(autoincrement())
  productId Int
  title     String
  content   String
  rating    Int
  authorId  String

  product Product  @relation(fields: [productId], references: [id])
  author  Customer @relation(fields: [authorId], references: [id])
}
